package section4;import javax.persistence.EntityManager;import javax.persistence.EntityManagerFactory;import javax.persistence.EntityTransaction;import javax.persistence.Persistence;public class Main4 {    public static void main(String[] args) {        EntityManagerFactory emf = Persistence.createEntityManagerFactory("create");        EntityManager em = emf.createEntityManager();        EntityTransaction tx = em.getTransaction();        tx.begin();        try {            //test1(em);//4-3. 필드와 컬럼 매핑            test2(em);//4-4. 기본키 매핑            tx.commit();        } catch (Exception e) {            tx.rollback();        } finally {            em.close();        }        emf.close();    }    //4-3. 필드와 컬럼 매핑    public static void test1(EntityManager em){    }    //4-4. 기본키 매핑    public static void test2(EntityManager em){        Member4_4 member1 = new Member4_4();        //member.setId("id"); //generatedValue를 사용할거니 주석처리        member1.setUsername("test1"); //persistence에서 create로 설정하고 테스트해야함 > 시퀀스까지 만들어야하니까        Member4_4 member2 = new Member4_4();        member2.setUsername("test2");        Member4_4 member3 = new Member4_4();        member3.setUsername("test3");        em.persist(member1);        em.persist(member2);        em.persist(member3);    }}