package section5;import javax.persistence.*;public class Test5 {    public static void main(String[] args) {        EntityManagerFactory emf = Persistence.createEntityManagerFactory("create");        EntityManager em = emf.createEntityManager();        EntityTransaction tx = em.getTransaction();        tx.begin();        try {            //5-1. 단방향 연관관계 - [1]테이블에 맞춰 모델링 : 등록, 조회            test1(em);            tx.commit();        } catch (Exception e) {            tx.rollback();        } finally {            em.close();        }        emf.close();    }    //5-1. 단방향 연관관계 - [1]테이블에 맞춰 모델링 : 등록, 조회    public static void test1(EntityManager em){        //(1)등록 : 팀 이름을 지정해주고(id는 자동생성) 이 팀 정보를 가지는 멤벌를 생성할것        Team5 team5 = new Team5();        team5.setName("TEAM_A");        em.persist(team5);        Member5 member1 = new Member5();        member1.setUsername("A");        member1.setTeamId(team5.getId());        em.persist(member1);        //(2)조회 : 멤버의 팀 명을 알고싶은경우        Member5 findMember = em.find(Member5.class, member1.getId()); //member1의 Id에 해당하는 Member객체를 가져오고        Long findTeamId = findMember.getTeamId();//가져온 Member객체에서 teamId를 찾아내고        Team5 findTeam = em.find(Team5.class, findTeamId);//찾아낸 teamId를 사용해 Team객체에서 name 검색해야함        System.out.println("결과 : "+findTeam.getName());        //테이블에 맞춰 모델링하는경우 연관관계가 없기때문에 외래키 식별자를 직접 다뤄야함 = 복잡하고 귀찮음    }}